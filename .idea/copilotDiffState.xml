<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/NotesWeb/app/Http/Controllers/AuthController.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/app/Http/Controllers/AuthController.php" />
              <option name="originalContent" value="&lt;?php&#10;&#10;namespace App\Http\Controllers;&#10;&#10;use Illuminate\Support\Facades\Auth;&#10;use Illuminate\Support\Facades\Hash;&#10;use Illuminate\Http\Request;&#10;use App\Models\User;&#10;&#10;class AuthController extends Controller&#10;{&#10;    public function login(Request $request)&#10;    {&#10;        $credentials = $request-&gt;only('email', 'password');&#10;        if (Auth::attempt($credentials)) {&#10;            $request-&gt;session()-&gt;regenerate();&#10;            return redirect()-&gt;intended('home');&#10;        }&#10;&#10;        return back()-&gt;withErrors(['email' =&gt; 'Credenciais inválidas.']);&#10;    }&#10;&#10;    public function register(Request $request)&#10;    {&#10;        $request-&gt;validate([&#10;            'name' =&gt; 'required|string|max:255',&#10;            'email' =&gt; 'required|string|email|max:255|unique:users',&#10;            'password' =&gt; 'required|string|min:8|confirmed',&#10;        ]);&#10;&#10;        $user = User::create([&#10;            'name' =&gt; $request-&gt;name,&#10;            'email' =&gt; $request-&gt;email,&#10;            'password' =&gt; Hash::make($request-&gt;password),&#10;        ]);&#10;&#10;        Auth::login($user);&#10;&#10;        return redirect()-&gt;intended('home');&#10;    }&#10;&#10;    public function logout(Request $request)&#10;    {&#10;        Auth::logout();&#10;        $request-&gt;session()-&gt;invalidate();&#10;        $request-&gt;session()-&gt;regenerateToken();&#10;&#10;        return redirect('login');&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="&lt;?php&#10;&#10;namespace App\Http\Controllers;&#10;&#10;use Illuminate\Support\Facades\Auth;&#10;use Illuminate\Support\Facades\Hash;&#10;use Illuminate\Http\Request;&#10;use App\Models\User;&#10;&#10;class AuthController extends Controller&#10;{&#10;    /**&#10;     * Mostrar página de login&#10;     */&#10;    public function showLogin()&#10;    {&#10;        return view('auth.login');&#10;    }&#10;&#10;    /**&#10;     * Mostrar página de registro&#10;     */&#10;    public function showRegister()&#10;    {&#10;        return view('auth.register');&#10;    }&#10;&#10;    public function login(Request $request)&#10;    {&#10;        $credentials = $request-&gt;only('email', 'password');&#10;        if (Auth::attempt($credentials)) {&#10;            $request-&gt;session()-&gt;regenerate();&#10;            return redirect()-&gt;intended('home');&#10;        }&#10;&#10;        return back()-&gt;withErrors(['email' =&gt; 'Credenciais inválidas.']);&#10;    }&#10;&#10;    public function register(Request $request)&#10;    {&#10;        $request-&gt;validate([&#10;            'name' =&gt; 'required|string|max:255',&#10;            'email' =&gt; 'required|string|email|max:255|unique:users',&#10;            'password' =&gt; 'required|string|min:8|confirmed',&#10;        ]);&#10;&#10;        $user = User::create([&#10;            'name' =&gt; $request-&gt;name,&#10;            'email' =&gt; $request-&gt;email,&#10;            'password' =&gt; Hash::make($request-&gt;password),&#10;        ]);&#10;&#10;        Auth::login($user);&#10;&#10;        return redirect()-&gt;intended('home');&#10;    }&#10;&#10;    public function logout(Request $request)&#10;    {&#10;        Auth::logout();&#10;        $request-&gt;session()-&gt;invalidate();&#10;        $request-&gt;session()-&gt;regenerateToken();&#10;&#10;        return redirect('login');&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/app/Http/Controllers/Controller.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/app/Http/Controllers/Controller.php" />
              <option name="originalContent" value="&lt;?php&#10;&#10;namespace App\Http\Controllers;&#10;&#10;abstract class Controller&#10;{&#10;    //&#10;}&#10;" />
              <option name="updatedContent" value="&lt;?php&#10;&#10;namespace App\Http\Controllers;&#10;&#10;use Illuminate\Foundation\Auth\Access\AuthorizesRequests;&#10;use Illuminate\Foundation\Validation\ValidatesRequests;&#10;use Illuminate\Routing\Controller as BaseController;&#10;&#10;abstract class Controller extends BaseController&#10;{&#10;    use AuthorizesRequests, ValidatesRequests;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/app/Http/Controllers/NoteController.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/app/Http/Controllers/NoteController.php" />
              <option name="originalContent" value="&lt;?php&#10;&#10;namespace App\Http\Controllers;&#10;&#10;use App\Models\Note;&#10;use Illuminate\Http\Request;&#10;use Illuminate\Support\Facades\Auth;&#10;&#10;class NoteController extends Controller&#10;{&#10;    /**&#10;     * Constructor para aplicar middleware de autenticação&#10;     */&#10;    public function __construct()&#10;    {&#10;        $this-&gt;middleware('auth')-&gt;except(['index', 'show']);&#10;    }&#10;&#10;    public function index(Request $request)&#10;    {&#10;         $query = Note::query();&#10;&#10;         // Filtrar por visibilidade ou por propriedade do usuário&#10;         if ($request-&gt;filled('visibility') &amp;&amp; $request-&gt;visibility === 'public') {&#10;             // Se solicitou apenas notas públicas&#10;             $query-&gt;where('is_public', true);&#10;         } else if ($request-&gt;filled('mine') &amp;&amp; $request-&gt;mine &amp;&amp; Auth::check()) {&#10;             // Se solicitou apenas as próprias notas&#10;             $query-&gt;where('user_id', Auth::id());&#10;         } else {&#10;             // Comportamento padrão: mostrar apenas as públicas ou as do usuário atual&#10;             $query-&gt;where(function($q) {&#10;                 $q-&gt;where('is_public', true);&#10;&#10;                 if (Auth::check()) {&#10;                     $q-&gt;orWhere('user_id', Auth::id());&#10;                 }&#10;             });&#10;         }&#10;&#10;         // Busca por título ou conteúdo&#10;         if($request-&gt;filled('search')) {&#10;             $query-&gt;where(function($q) use ($request) {&#10;                 $q-&gt;where('title', 'like', '%' . $request-&gt;search . '%')&#10;                   -&gt;orWhere('content', 'like', '%' . $request-&gt;search . '%');&#10;             });&#10;         }&#10;&#10;         $notes = $query-&gt;latest()-&gt;get();&#10;&#10;         // Preparando variáveis para a view&#10;         $viewTitle = &quot;Todas as Notas&quot;;&#10;         if ($request-&gt;filled('visibility') &amp;&amp; $request-&gt;visibility === 'public') {&#10;             $viewTitle = &quot;Notas Públicas&quot;;&#10;         } else if ($request-&gt;filled('mine') &amp;&amp; $request-&gt;mine) {&#10;             $viewTitle = &quot;Minhas Notas&quot;;&#10;         }&#10;&#10;         return view('notes.index', compact('notes', 'viewTitle'));&#10;    }&#10;&#10;    public function create()&#10;    {&#10;        return view('notes.create');&#10;    }&#10;&#10;    public function store(Request $request)&#10;    {&#10;        $data = $request-&gt;validate([&#10;            'title' =&gt; 'required|string|max:255',&#10;            'content' =&gt; 'required|string',&#10;            'is_public' =&gt; 'boolean'&#10;        ]);&#10;&#10;        // Definir is_public como false se não for fornecido&#10;        $data['is_public'] = $request-&gt;has('is_public') ? true : false;&#10;&#10;        // Associar a nota ao usuário autenticado&#10;        $data['user_id'] = Auth::id();&#10;&#10;        Note::create($data);&#10;&#10;        return redirect()-&gt;route('notes.index')-&gt;with('success', 'Nota criada com sucesso!');&#10;    }&#10;&#10;    public function show(Note $note)&#10;    {&#10;        // Verificar se o usuário pode visualizar esta nota&#10;        if (!$note-&gt;is_public &amp;&amp; (!Auth::check() || $note-&gt;user_id !== Auth::id())) {&#10;            abort(403, 'Você não tem permissão para visualizar esta nota.');&#10;        }&#10;&#10;        return view('notes.show', compact('note'));&#10;    }&#10;&#10;    public function edit(Note $note)&#10;    {&#10;        // Verificar se o usuário pode editar esta nota&#10;        if ($note-&gt;user_id !== Auth::id()) {&#10;            abort(403, 'Você não tem permissão para editar esta nota.');&#10;        }&#10;&#10;        return view('notes.edit', compact('note'));&#10;    }&#10;&#10;    public function update(Request $request, Note $note)&#10;    {&#10;        // Verificar se o usuário pode atualizar esta nota&#10;        if ($note-&gt;user_id !== Auth::id()) {&#10;            abort(403, 'Você não tem permissão para atualizar esta nota.');&#10;        }&#10;&#10;        $data = $request-&gt;validate([&#10;            'title' =&gt; 'required|string|max:255',&#10;            'content' =&gt; 'required|string',&#10;            'is_public' =&gt; 'boolean'&#10;        ]);&#10;&#10;        // Definir is_public como false se não for fornecido&#10;        $data['is_public'] = $request-&gt;has('is_public') ? true : false;&#10;&#10;        $note-&gt;update($data);&#10;&#10;        return redirect()-&gt;route('notes.show', $note)-&gt;with('success', 'Nota atualizada com sucesso!');&#10;    }&#10;&#10;    public function destroy(Note $note)&#10;    {&#10;        // Verificar se o usuário pode excluir esta nota&#10;        if ($note-&gt;user_id !== Auth::id()) {&#10;            abort(403, 'Você não tem permissão para excluir esta nota.');&#10;        }&#10;&#10;        $note-&gt;delete();&#10;&#10;        return redirect()-&gt;route('notes.index')-&gt;with('success', 'Nota excluída com sucesso!');&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="&lt;?php&#10;&#10;namespace App\Http\Controllers;&#10;&#10;use App\Models\Note;&#10;use Illuminate\Http\Request;&#10;use Illuminate\Support\Facades\Auth;&#10;&#10;class NoteController extends Controller&#10;{&#10;    public function index(Request $request)&#10;    {&#10;         $query = Note::query();&#10;&#10;         // Filtrar por visibilidade ou por propriedade do usuário&#10;         if ($request-&gt;filled('visibility') &amp;&amp; $request-&gt;visibility === 'public') {&#10;             // Se solicitou apenas notas públicas&#10;             $query-&gt;where('is_public', true);&#10;         } else if ($request-&gt;filled('mine') &amp;&amp; $request-&gt;mine &amp;&amp; Auth::check()) {&#10;             // Se solicitou apenas as próprias notas&#10;             $query-&gt;where('user_id', Auth::id());&#10;         } else {&#10;             // Comportamento padrão: mostrar apenas as públicas ou as do usuário atual&#10;             $query-&gt;where(function($q) {&#10;                 $q-&gt;where('is_public', true);&#10;&#10;                 if (Auth::check()) {&#10;                     $q-&gt;orWhere('user_id', Auth::id());&#10;                 }&#10;             });&#10;         }&#10;&#10;         // Busca por título ou conteúdo&#10;         if($request-&gt;filled('search')) {&#10;             $query-&gt;where(function($q) use ($request) {&#10;                 $q-&gt;where('title', 'like', '%' . $request-&gt;search . '%')&#10;                   -&gt;orWhere('content', 'like', '%' . $request-&gt;search . '%');&#10;             });&#10;         }&#10;&#10;         $notes = $query-&gt;latest()-&gt;get();&#10;&#10;         // Preparando variáveis para a view&#10;         $viewTitle = &quot;Todas as Notas&quot;;&#10;         if ($request-&gt;filled('visibility') &amp;&amp; $request-&gt;visibility === 'public') {&#10;             $viewTitle = &quot;Notas Públicas&quot;;&#10;         } else if ($request-&gt;filled('mine') &amp;&amp; $request-&gt;mine) {&#10;             $viewTitle = &quot;Minhas Notas&quot;;&#10;         }&#10;&#10;         return view('notes.index', compact('notes', 'viewTitle'));&#10;    }&#10;&#10;    public function create()&#10;    {&#10;        return view('notes.create');&#10;    }&#10;&#10;    public function store(Request $request)&#10;    {&#10;        $data = $request-&gt;validate([&#10;            'title' =&gt; 'required|string|max:255',&#10;            'content' =&gt; 'required|string',&#10;            'is_public' =&gt; 'boolean'&#10;        ]);&#10;        &#10;        // Verificar se o usuário está tentando criar uma nota privada sem estar logado&#10;        $wantsPrivateNote = !$request-&gt;has('is_public') || $request-&gt;is_public == false;&#10;        &#10;        if ($wantsPrivateNote &amp;&amp; !Auth::check()) {&#10;            return redirect()-&gt;route('login')-&gt;with('error', 'Você precisa fazer login para criar notas privadas. Faça login e tente novamente.');&#10;        }&#10;        &#10;        // Se o usuário não está logado, forçar nota pública&#10;        if (!Auth::check()) {&#10;            $data['is_public'] = true;&#10;            $data['user_id'] = null; // Nota anônima&#10;        } else {&#10;            // Usuário logado: respeitar a escolha dele&#10;            $data['is_public'] = $request-&gt;has('is_public') ? true : false;&#10;            $data['user_id'] = Auth::id();&#10;        }&#10;        &#10;        Note::create($data);&#10;        &#10;        return redirect()-&gt;route('notes.index')-&gt;with('success', 'Nota criada com sucesso!');&#10;    }&#10;&#10;    public function show(Note $note)&#10;    {&#10;        // Verificar se o usuário pode visualizar esta nota&#10;        if (!$note-&gt;is_public &amp;&amp; (!Auth::check() || $note-&gt;user_id !== Auth::id())) {&#10;            abort(403, 'Você não tem permissão para visualizar esta nota.');&#10;        }&#10;&#10;        return view('notes.show', compact('note'));&#10;    }&#10;&#10;    public function edit(Note $note)&#10;    {&#10;        // Verificar se o usuário pode editar esta nota&#10;        if ($note-&gt;user_id !== Auth::id()) {&#10;            abort(403, 'Você não tem permissão para editar esta nota.');&#10;        }&#10;&#10;        return view('notes.edit', compact('note'));&#10;    }&#10;&#10;    public function update(Request $request, Note $note)&#10;    {&#10;        // Verificar se o usuário pode atualizar esta nota&#10;        if ($note-&gt;user_id !== Auth::id()) {&#10;            abort(403, 'Você não tem permissão para atualizar esta nota.');&#10;        }&#10;&#10;        $data = $request-&gt;validate([&#10;            'title' =&gt; 'required|string|max:255',&#10;            'content' =&gt; 'required|string',&#10;            'is_public' =&gt; 'boolean'&#10;        ]);&#10;&#10;        // Definir is_public como false se não for fornecido&#10;        $data['is_public'] = $request-&gt;has('is_public') ? true : false;&#10;&#10;        $note-&gt;update($data);&#10;&#10;        return redirect()-&gt;route('notes.show', $note)-&gt;with('success', 'Nota atualizada com sucesso!');&#10;    }&#10;&#10;    public function destroy(Note $note)&#10;    {&#10;        // Verificar se o usuário pode excluir esta nota&#10;        if ($note-&gt;user_id !== Auth::id()) {&#10;            abort(403, 'Você não tem permissão para excluir esta nota.');&#10;        }&#10;&#10;        $note-&gt;delete();&#10;&#10;        return redirect()-&gt;route('notes.index')-&gt;with('success', 'Nota excluída com sucesso!');&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/app/Http/Controllers/ProfileController.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/app/Http/Controllers/ProfileController.php" />
              <option name="updatedContent" value="&lt;?php&#10;&#10;namespace App\Http\Controllers;&#10;&#10;use Illuminate\Http\Request;&#10;use Illuminate\Support\Facades\Auth;&#10;use Illuminate\Support\Facades\Hash;&#10;use Illuminate\Validation\Rules\Password;&#10;&#10;class ProfileController extends Controller&#10;{&#10;    public function __construct()&#10;    {&#10;        $this-&gt;middleware('auth');&#10;    }&#10;&#10;    /**&#10;     * Show the user's profile page&#10;     */&#10;    public function show()&#10;    {&#10;        $user = Auth::user();&#10;        return view('profile.show', compact('user'));&#10;    }&#10;&#10;    /**&#10;     * Show the form for editing the user's profile&#10;     */&#10;    public function edit()&#10;    {&#10;        $user = Auth::user();&#10;        return view('profile.edit', compact('user'));&#10;    }&#10;&#10;    /**&#10;     * Update the user's profile information&#10;     */&#10;    public function update(Request $request)&#10;    {&#10;        $user = Auth::user();&#10;&#10;        $request-&gt;validate([&#10;            'name' =&gt; 'required|string|max:255',&#10;            'email' =&gt; 'required|string|email|max:255|unique:users,email,' . $user-&gt;id,&#10;        ]);&#10;&#10;        $user-&gt;update([&#10;            'name' =&gt; $request-&gt;name,&#10;            'email' =&gt; $request-&gt;email,&#10;        ]);&#10;&#10;        return redirect()-&gt;route('profile.show')-&gt;with('success', 'Perfil atualizado com sucesso!');&#10;    }&#10;&#10;    /**&#10;     * Update the user's password&#10;     */&#10;    public function updatePassword(Request $request)&#10;    {&#10;        $user = Auth::user();&#10;&#10;        $request-&gt;validate([&#10;            'current_password' =&gt; 'required',&#10;            'password' =&gt; ['required', 'confirmed', Password::min(8)],&#10;        ]);&#10;&#10;        // Verify current password&#10;        if (!Hash::check($request-&gt;current_password, $user-&gt;password)) {&#10;            return back()-&gt;withErrors(['current_password' =&gt; 'A senha atual não está correta.']);&#10;        }&#10;&#10;        $user-&gt;update([&#10;            'password' =&gt; Hash::make($request-&gt;password),&#10;        ]);&#10;&#10;        return redirect()-&gt;route('profile.show')-&gt;with('success', 'Senha atualizada com sucesso!');&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/app/Models/Note.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/app/Models/Note.php" />
              <option name="originalContent" value="&lt;?php&#10;&#10;namespace App\Models;&#10;&#10;use Illuminate\Database\Eloquent\Factories\HasFactory;&#10;use Illuminate\Database\Eloquent\Model;&#10;&#10;class Note extends Model&#10;{&#10;    use HasFactory;&#10;    protected $fillable = [&#10;        'title',&#10;        'content',&#10;        'is_public',&#10;        'user_id'&#10;    ];&#10;&#10;    /**&#10;     * Get the user that owns the note&#10;     */&#10;    public function user()&#10;    {&#10;        return $this-&gt;belongsTo(User::class);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="&lt;?php&#10;&#10;namespace App\Models;&#10;&#10;use Illuminate\Database\Eloquent\Factories\HasFactory;&#10;use Illuminate\Database\Eloquent\Model;&#10;&#10;class Note extends Model&#10;{&#10;    use HasFactory;&#10;    protected $fillable = [&#10;        'title',&#10;        'content',&#10;        'is_public',&#10;        'user_id'&#10;    ];&#10;&#10;    /**&#10;     * Get the user that owns the note&#10;     */&#10;    public function user()&#10;    {&#10;        return $this-&gt;belongsTo(User::class);&#10;    }&#10;&#10;    /**&#10;     * Check if the note is anonymous (created by a guest user)&#10;     */&#10;    public function isAnonymous()&#10;    {&#10;        return $this-&gt;user_id === null;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/app/Models/User.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/app/Models/User.php" />
              <option name="originalContent" value="&lt;?php&#10;&#10;namespace App\Models;&#10;&#10;// use Illuminate\Contracts\Auth\MustVerifyEmail;&#10;use Illuminate\Database\Eloquent\Factories\HasFactory;&#10;use Illuminate\Foundation\Auth\User as Authenticatable;&#10;use Illuminate\Notifications\Notifiable;&#10;&#10;class User extends Authenticatable&#10;{&#10;    /** @use HasFactory&lt;\Database\Factories\UserFactory&gt; */&#10;    use HasFactory, Notifiable;&#10;&#10;    /**&#10;     * The attributes that are mass assignable.&#10;     *&#10;     * @var list&lt;string&gt;&#10;     */&#10;    protected $fillable = [&#10;        'name',&#10;        'email',&#10;        'password',&#10;    ];&#10;&#10;    /**&#10;     * The attributes that should be hidden for serialization.&#10;     *&#10;     * @var list&lt;string&gt;&#10;     */&#10;    protected $hidden = [&#10;        'password',&#10;        'remember_token',&#10;    ];&#10;&#10;    /**&#10;     * Get the attributes that should be cast.&#10;     *&#10;     * @return array&lt;string, string&gt;&#10;     */&#10;    protected function casts(): array&#10;    {&#10;        return [&#10;            'email_verified_at' =&gt; 'datetime',&#10;            'password' =&gt; 'hashed',&#10;        ];&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="&lt;?php&#10;&#10;namespace App\Models;&#10;&#10;// use Illuminate\Contracts\Auth\MustVerifyEmail;&#10;use Illuminate\Database\Eloquent\Factories\HasFactory;&#10;use Illuminate\Foundation\Auth\User as Authenticatable;&#10;use Illuminate\Notifications\Notifiable;&#10;&#10;class User extends Authenticatable&#10;{&#10;    /** @use HasFactory&lt;\Database\Factories\UserFactory&gt; */&#10;    use HasFactory, Notifiable;&#10;&#10;    /**&#10;     * The attributes that are mass assignable.&#10;     *&#10;     * @var list&lt;string&gt;&#10;     */&#10;    protected $fillable = [&#10;        'name',&#10;        'email',&#10;        'password',&#10;    ];&#10;&#10;    /**&#10;     * The attributes that should be hidden for serialization.&#10;     *&#10;     * @var list&lt;string&gt;&#10;     */&#10;    protected $hidden = [&#10;        'password',&#10;        'remember_token',&#10;    ];&#10;&#10;    /**&#10;     * Get the attributes that should be cast.&#10;     *&#10;     * @return array&lt;string, string&gt;&#10;     */&#10;    protected function casts(): array&#10;    {&#10;        return [&#10;            'email_verified_at' =&gt; 'datetime',&#10;            'password' =&gt; 'hashed',&#10;        ];&#10;    }&#10;&#10;    /**&#10;     * Get the notes for the user&#10;     */&#10;    public function notes()&#10;    {&#10;        return $this-&gt;hasMany(Note::class);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/database/migrations/2025_07_30_100000_add_visibility_and_user_id_to_notes.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/database/migrations/2025_07_30_100000_add_visibility_and_user_id_to_notes.php" />
              <option name="updatedContent" value="&lt;?php&#10;&#10;use Illuminate\Database\Migrations\Migration;&#10;use Illuminate\Database\Schema\Blueprint;&#10;use Illuminate\Support\Facades\Schema;&#10;&#10;return new class extends Migration&#10;{&#10;    /**&#10;     * Run the migrations.&#10;     */&#10;    public function up(): void&#10;    {&#10;        Schema::table('notes', function (Blueprint $table) {&#10;            $table-&gt;boolean('is_public')-&gt;default(false);&#10;            $table-&gt;foreignId('user_id')-&gt;nullable()-&gt;constrained();&#10;        });&#10;    }&#10;&#10;    /**&#10;     * Reverse the migrations.&#10;     */&#10;    public function down(): void&#10;    {&#10;        Schema::table('notes', function (Blueprint $table) {&#10;            $table-&gt;dropColumn('is_public');&#10;            $table-&gt;dropForeign(['user_id']);&#10;            $table-&gt;dropColumn('user_id');&#10;        });&#10;    }&#10;};" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/public/css/auth/auth.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/public/css/auth/auth.css" />
              <option name="updatedContent" value="body {&#10;    font-family: 'Roboto', sans-serif;&#10;    background-color: #f5f5f5;&#10;    margin: 0;&#10;    padding: 0;&#10;}&#10;&#10;.auth-container {&#10;    max-width: 400px;&#10;    margin: 50px auto;&#10;    background-color: #ffffff;&#10;    border-radius: 8px;&#10;    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);&#10;    overflow: hidden;&#10;    position: relative;&#10;}&#10;&#10;.auth-container::before {&#10;    content: '';&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 4px;&#10;    background: linear-gradient(90deg, #ff3333, #ff0000, #cc0000);&#10;}&#10;&#10;.auth-header {&#10;    padding: 25px;&#10;    text-align: center;&#10;    border-bottom: 1px solid #eaeaea;&#10;}&#10;&#10;.auth-header h1 {&#10;    margin: 0;&#10;    color: #e60000;&#10;    font-size: 1.8rem;&#10;    font-weight: 500;&#10;}&#10;&#10;.auth-form {&#10;    padding: 25px;&#10;}&#10;&#10;.form-group {&#10;    margin-bottom: 20px;&#10;}&#10;&#10;.form-group label {&#10;    display: block;&#10;    margin-bottom: 6px;&#10;    font-size: 0.9rem;&#10;    color: #333;&#10;    font-weight: 500;&#10;}&#10;&#10;.form-group input {&#10;    width: 100%;&#10;    padding: 12px;&#10;    border: 1px solid #ddd;&#10;    border-radius: 4px;&#10;    font-size: 1rem;&#10;    transition: border-color 0.3s;&#10;    box-sizing: border-box;&#10;}&#10;&#10;.form-group input:focus {&#10;    border-color: #e60000;&#10;    outline: none;&#10;    box-shadow: 0 0 0 3px rgba(230, 0, 0, 0.1);&#10;}&#10;&#10;.error-message {&#10;    color: #e60000;&#10;    font-size: 0.85rem;&#10;    margin-top: 5px;&#10;}&#10;&#10;.form-footer {&#10;    margin-top: 25px;&#10;}&#10;&#10;.btn {&#10;    display: inline-block;&#10;    padding: 12px 20px;&#10;    background-color: #e60000;&#10;    color: white;&#10;    border: none;&#10;    border-radius: 4px;&#10;    font-size: 1rem;&#10;    font-weight: 500;&#10;    cursor: pointer;&#10;    transition: background-color 0.3s, transform 0.2s;&#10;    width: 100%;&#10;    text-align: center;&#10;}&#10;&#10;.btn:hover {&#10;    background-color: #cc0000;&#10;    transform: translateY(-2px);&#10;}&#10;&#10;.auth-links {&#10;    text-align: center;&#10;    margin-top: 20px;&#10;    padding-bottom: 20px;&#10;}&#10;&#10;.auth-links a {&#10;    color: #e60000;&#10;    text-decoration: none;&#10;    font-size: 0.9rem;&#10;}&#10;&#10;.auth-links a:hover {&#10;    text-decoration: underline;&#10;}&#10;&#10;.remember-me {&#10;    display: flex;&#10;    align-items: center;&#10;    margin-bottom: 20px;&#10;}&#10;&#10;.remember-me input {&#10;    margin-right: 8px;&#10;}&#10;&#10;.remember-me label {&#10;    color: #555;&#10;    font-size: 0.9rem;&#10;}&#10;&#10;.logout-btn {&#10;    background-color: transparent;&#10;    border: 1px solid #e60000;&#10;    color: #e60000;&#10;    padding: 6px 12px;&#10;    border-radius: 4px;&#10;    font-size: 0.9rem;&#10;    cursor: pointer;&#10;    transition: all 0.3s;&#10;}&#10;&#10;.logout-btn:hover {&#10;    background-color: #e60000;&#10;    color: white;&#10;}&#10;&#10;@media (max-width: 480px) {&#10;    .auth-container {&#10;        margin: 30px 15px;&#10;        width: auto;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/public/css/layouts/topbar.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/public/css/layouts/topbar.css" />
              <option name="originalContent" value="/* Estilo moderno para a topbar com cores vermelho e branco */&#10;body {&#10;    font-family: 'Roboto', sans-serif;&#10;    margin: 0;&#10;    padding: 0;&#10;    background-color: #f8f9fa;&#10;}&#10;&#10;.topbar {&#10;    display: flex;&#10;    align-items: center;&#10;    background-color: #ffffff;&#10;    padding: 15px 20px;&#10;    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);&#10;    position: relative;&#10;    z-index: 100;&#10;}&#10;&#10;.topbar::after {&#10;    content: '';&#10;    position: absolute;&#10;    bottom: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 3px;&#10;    background: linear-gradient(90deg, #ff3333, #ff0000, #cc0000);&#10;}&#10;&#10;.topbar .logo {&#10;    font-size: 1.5rem;&#10;    font-weight: bold;&#10;    margin-right: 30px;&#10;    color: #e60000;&#10;}&#10;&#10;.main-menu {&#10;    display: flex;&#10;    align-items: center;&#10;    flex-grow: 1;&#10;}&#10;&#10;.main-menu a {&#10;    color: #333;&#10;    text-decoration: none;&#10;    margin: 0 15px;&#10;    font-weight: 500;&#10;    transition: color 0.3s;&#10;    position: relative;&#10;}&#10;&#10;.main-menu a:hover {&#10;    color: #e60000;&#10;}&#10;&#10;.main-menu a:hover::after {&#10;    content: '';&#10;    position: absolute;&#10;    bottom: -8px;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 2px;&#10;    background-color: #e60000;&#10;}&#10;&#10;/* Dropdown para notas públicas */&#10;.dropdown {&#10;    position: relative;&#10;    display: inline-block;&#10;}&#10;&#10;.dropdown-toggle {&#10;    display: flex;&#10;    align-items: center;&#10;    cursor: pointer;&#10;}&#10;&#10;.dropdown-icon {&#10;    font-size: 10px;&#10;    margin-left: 5px;&#10;}&#10;&#10;.dropdown-menu {&#10;    display: none;&#10;    position: absolute;&#10;    top: 100%;&#10;    left: 0;&#10;    background-color: #fff;&#10;    min-width: 250px;&#10;    box-shadow: 0 8px 16px rgba(0,0,0,0.1);&#10;    border-radius: 4px;&#10;    padding: 10px 0;&#10;    z-index: 1000;&#10;    margin-top: 15px;&#10;    border-top: 3px solid #e60000;&#10;}&#10;&#10;.dropdown:hover .dropdown-menu {&#10;    display: block;&#10;}&#10;&#10;.dropdown-item {&#10;    display: block;&#10;    padding: 10px 15px;&#10;    text-decoration: none;&#10;    color: #333;&#10;    transition: background-color 0.3s;&#10;    white-space: nowrap;&#10;    overflow: hidden;&#10;    text-overflow: ellipsis;&#10;}&#10;&#10;.dropdown-item:hover {&#10;    background-color: #f8f9fa;&#10;    color: #e60000;&#10;}&#10;&#10;.dropdown-item.empty {&#10;    color: #999;&#10;    font-style: italic;&#10;}&#10;&#10;.dropdown-item.view-all {&#10;    font-weight: 600;&#10;    color: #e60000;&#10;    border-top: 1px solid #eee;&#10;    margin-top: 5px;&#10;    padding-top: 10px;&#10;}&#10;&#10;.dropdown-divider {&#10;    height: 1px;&#10;    background-color: #eee;&#10;    margin: 5px 0;&#10;}&#10;&#10;.auth-links {&#10;    margin-left: auto;&#10;    display: flex;&#10;    align-items: center;&#10;}&#10;&#10;.auth-links a {&#10;    padding: 8px 15px;&#10;    border-radius: 4px;&#10;    text-decoration: none;&#10;    margin-left: 10px;&#10;    font-weight: 500;&#10;    transition: all 0.3s;&#10;}&#10;&#10;.auth-links a.login {&#10;    background-color: transparent;&#10;    border: 1px solid #e60000;&#10;    color: #e60000;&#10;}&#10;&#10;.auth-links a.login:hover {&#10;    background-color: rgba(230, 0, 0, 0.1);&#10;}&#10;&#10;.auth-links a.register {&#10;    background-color: #e60000;&#10;    color: white;&#10;}&#10;&#10;.auth-links a.register:hover {&#10;    background-color: #cc0000;&#10;}&#10;&#10;.user-greeting {&#10;    margin-right: 15px;&#10;    font-weight: 500;&#10;    color: #333;&#10;}&#10;&#10;.logout-btn {&#10;    background-color: transparent;&#10;    border: 1px solid #e60000;&#10;    color: #e60000;&#10;    padding: 8px 15px;&#10;    border-radius: 4px;&#10;    cursor: pointer;&#10;    font-weight: 500;&#10;    transition: all 0.3s;&#10;}&#10;&#10;.logout-btn:hover {&#10;    background-color: rgba(230, 0, 0, 0.1);&#10;}&#10;&#10;/* Alerta de sucesso */&#10;.alert {&#10;    padding: 15px;&#10;    margin: 20px;&#10;    border-radius: 4px;&#10;    position: relative;&#10;}&#10;&#10;.alert-success {&#10;    background-color: #d4edda;&#10;    color: #155724;&#10;    border: 1px solid #c3e6cb;&#10;}&#10;" />
              <option name="updatedContent" value="/* Estilo moderno para a topbar com cores vermelho e branco */&#10;body {&#10;    font-family: 'Roboto', sans-serif;&#10;    margin: 0;&#10;    padding: 0;&#10;    background-color: #f8f9fa;&#10;}&#10;&#10;.topbar {&#10;    display: flex;&#10;    align-items: center;&#10;    background-color: #ffffff;&#10;    padding: 15px 20px;&#10;    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);&#10;    position: relative;&#10;    z-index: 100;&#10;}&#10;&#10;.topbar::after {&#10;    content: '';&#10;    position: absolute;&#10;    bottom: 0;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 3px;&#10;    background: linear-gradient(90deg, #ff3333, #ff0000, #cc0000);&#10;}&#10;&#10;.topbar .logo {&#10;    font-size: 1.5rem;&#10;    font-weight: bold;&#10;    margin-right: 30px;&#10;    color: #e60000;&#10;}&#10;&#10;.main-menu {&#10;    display: flex;&#10;    align-items: center;&#10;    flex-grow: 1;&#10;}&#10;&#10;.main-menu a {&#10;    color: #333;&#10;    text-decoration: none;&#10;    margin: 0 15px;&#10;    font-weight: 500;&#10;    transition: color 0.3s;&#10;    position: relative;&#10;}&#10;&#10;.main-menu a:hover {&#10;    color: #e60000;&#10;}&#10;&#10;.main-menu a:hover::after {&#10;    content: '';&#10;    position: absolute;&#10;    bottom: -8px;&#10;    left: 0;&#10;    width: 100%;&#10;    height: 2px;&#10;    background-color: #e60000;&#10;}&#10;&#10;/* Dropdown para notas públicas */&#10;.dropdown {&#10;    position: relative;&#10;    display: inline-block;&#10;}&#10;&#10;.dropdown-toggle {&#10;    display: flex;&#10;    align-items: center;&#10;    cursor: pointer;&#10;}&#10;&#10;.dropdown-icon {&#10;    font-size: 10px;&#10;    margin-left: 5px;&#10;}&#10;&#10;.dropdown-menu {&#10;    display: none;&#10;    position: absolute;&#10;    top: 100%;&#10;    left: 0;&#10;    background-color: #fff;&#10;    min-width: 250px;&#10;    box-shadow: 0 8px 16px rgba(0,0,0,0.1);&#10;    border-radius: 4px;&#10;    padding: 10px 0;&#10;    z-index: 1000;&#10;    margin-top: 15px;&#10;    border-top: 3px solid #e60000;&#10;}&#10;&#10;.dropdown:hover .dropdown-menu {&#10;    display: block;&#10;}&#10;&#10;.dropdown-item {&#10;    display: block;&#10;    padding: 10px 15px;&#10;    text-decoration: none;&#10;    color: #333;&#10;    transition: background-color 0.3s;&#10;    white-space: nowrap;&#10;    overflow: hidden;&#10;    text-overflow: ellipsis;&#10;}&#10;&#10;.dropdown-item:hover {&#10;    background-color: #f8f9fa;&#10;    color: #e60000;&#10;}&#10;&#10;.dropdown-item.empty {&#10;    color: #999;&#10;    font-style: italic;&#10;}&#10;&#10;.dropdown-item.view-all {&#10;    font-weight: 600;&#10;    color: #e60000;&#10;    border-top: 1px solid #eee;&#10;    margin-top: 5px;&#10;    padding-top: 10px;&#10;}&#10;&#10;.dropdown-divider {&#10;    height: 1px;&#10;    background-color: #eee;&#10;    margin: 5px 0;&#10;}&#10;&#10;.auth-links {&#10;    margin-left: auto;&#10;    display: flex;&#10;    align-items: center;&#10;}&#10;&#10;.auth-links a {&#10;    padding: 8px 15px;&#10;    border-radius: 4px;&#10;    text-decoration: none;&#10;    margin-left: 10px;&#10;    font-weight: 500;&#10;    transition: all 0.3s;&#10;}&#10;&#10;.auth-links a.login {&#10;    background-color: transparent;&#10;    border: 1px solid #e60000;&#10;    color: #e60000;&#10;}&#10;&#10;.auth-links a.login:hover {&#10;    background-color: rgba(230, 0, 0, 0.1);&#10;}&#10;&#10;.auth-links a.register {&#10;    background-color: #e60000;&#10;    color: white;&#10;}&#10;&#10;.auth-links a.register:hover {&#10;    background-color: #cc0000;&#10;}&#10;&#10;.auth-links a.profile-link {&#10;    background-color: transparent;&#10;    border: 1px solid #e60000;&#10;    color: #e60000;&#10;}&#10;&#10;.auth-links a.profile-link:hover {&#10;    background-color: rgba(230, 0, 0, 0.1);&#10;}&#10;&#10;.user-greeting {&#10;    margin-right: 15px;&#10;    font-weight: 500;&#10;    color: #333;&#10;}&#10;&#10;.logout-btn {&#10;    background-color: transparent;&#10;    border: 1px solid #e60000;&#10;    color: #e60000;&#10;    padding: 8px 15px;&#10;    border-radius: 4px;&#10;    cursor: pointer;&#10;    font-weight: 500;&#10;    transition: all 0.3s;&#10;}&#10;&#10;.logout-btn:hover {&#10;    background-color: rgba(230, 0, 0, 0.1);&#10;}&#10;&#10;/* Alerta de sucesso */&#10;.alert {&#10;    padding: 15px;&#10;    margin: 20px;&#10;    border-radius: 4px;&#10;    position: relative;&#10;}&#10;&#10;.alert-success {&#10;    background-color: #d4edda;&#10;    color: #155724;&#10;    border: 1px solid #c3e6cb;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/resources/views/auth/login.blade.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/resources/views/auth/login.blade.php" />
              <option name="updatedContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;auth-container&quot;&gt;&#10;    &lt;div class=&quot;auth-header&quot;&gt;&#10;        &lt;h1&gt;Login&lt;/h1&gt;&#10;    &lt;/div&gt;&#10;    &#10;    &lt;div class=&quot;auth-form&quot;&gt;&#10;        &lt;form method=&quot;POST&quot; action=&quot;{{ route('login') }}&quot;&gt;&#10;            @csrf&#10;            &#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;email&quot;&gt;E-mail&lt;/label&gt;&#10;                &lt;input id=&quot;email&quot; type=&quot;email&quot; name=&quot;email&quot; value=&quot;{{ old('email') }}&quot; required autocomplete=&quot;email&quot; autofocus&gt;&#10;                @error('email')&#10;                    &lt;span class=&quot;error-message&quot;&gt;{{ $message }}&lt;/span&gt;&#10;                @enderror&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password&quot;&gt;Senha&lt;/label&gt;&#10;                &lt;input id=&quot;password&quot; type=&quot;password&quot; name=&quot;password&quot; required autocomplete=&quot;current-password&quot;&gt;&#10;                @error('password')&#10;                    &lt;span class=&quot;error-message&quot;&gt;{{ $message }}&lt;/span&gt;&#10;                @enderror&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;remember-me&quot;&gt;&#10;                &lt;input type=&quot;checkbox&quot; name=&quot;remember&quot; id=&quot;remember&quot; {{ old('remember') ? 'checked' : '' }}&gt;&#10;                &lt;label for=&quot;remember&quot;&gt;Lembrar de mim&lt;/label&gt;&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;form-footer&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn&quot;&gt;&#10;                    Entrar&#10;                &lt;/button&gt;&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;auth-links&quot;&gt;&#10;                &lt;a href=&quot;{{ route('register') }}&quot;&gt;&#10;                    Não tem uma conta? Cadastre-se&#10;                &lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;@endsection" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/resources/views/auth/register.blade.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/resources/views/auth/register.blade.php" />
              <option name="updatedContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;auth-container&quot;&gt;&#10;    &lt;div class=&quot;auth-header&quot;&gt;&#10;        &lt;h1&gt;Cadastro&lt;/h1&gt;&#10;    &lt;/div&gt;&#10;    &#10;    &lt;div class=&quot;auth-form&quot;&gt;&#10;        &lt;form method=&quot;POST&quot; action=&quot;{{ route('register') }}&quot;&gt;&#10;            @csrf&#10;            &#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;name&quot;&gt;Nome&lt;/label&gt;&#10;                &lt;input id=&quot;name&quot; type=&quot;text&quot; name=&quot;name&quot; value=&quot;{{ old('name') }}&quot; required autocomplete=&quot;name&quot; autofocus&gt;&#10;                @error('name')&#10;                    &lt;span class=&quot;error-message&quot;&gt;{{ $message }}&lt;/span&gt;&#10;                @enderror&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;email&quot;&gt;E-mail&lt;/label&gt;&#10;                &lt;input id=&quot;email&quot; type=&quot;email&quot; name=&quot;email&quot; value=&quot;{{ old('email') }}&quot; required autocomplete=&quot;email&quot;&gt;&#10;                @error('email')&#10;                    &lt;span class=&quot;error-message&quot;&gt;{{ $message }}&lt;/span&gt;&#10;                @enderror&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password&quot;&gt;Senha&lt;/label&gt;&#10;                &lt;input id=&quot;password&quot; type=&quot;password&quot; name=&quot;password&quot; required autocomplete=&quot;new-password&quot;&gt;&#10;                @error('password')&#10;                    &lt;span class=&quot;error-message&quot;&gt;{{ $message }}&lt;/span&gt;&#10;                @enderror&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;password-confirm&quot;&gt;Confirmar Senha&lt;/label&gt;&#10;                &lt;input id=&quot;password-confirm&quot; type=&quot;password&quot; name=&quot;password_confirmation&quot; required autocomplete=&quot;new-password&quot;&gt;&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;form-footer&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn&quot;&gt;&#10;                    Cadastrar&#10;                &lt;/button&gt;&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;auth-links&quot;&gt;&#10;                &lt;a href=&quot;{{ route('login') }}&quot;&gt;&#10;                    Já tem uma conta? Faça login&#10;                &lt;/a&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;@endsection" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/resources/views/layouts/app.blade.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/resources/views/layouts/app.blade.php" />
              <option name="originalContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;pt&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Bloco de Notas&lt;/title&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/layouts/topbar.css') }}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/home.css') }}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/notes/create.css') }}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/notes/edit.css') }}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/notes/index.css') }}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/auth/auth.css') }}&quot;&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;div class=&quot;topbar&quot;&gt;&#10;    &lt;div class=&quot;logo&quot;&gt; Web Notes&lt;/div&gt;&#10;&#10;    &lt;div class=&quot;main-menu&quot;&gt;&#10;        &lt;a href=&quot;{{ route('home') }}&quot;&gt;Início&lt;/a&gt;&#10;        &lt;a href=&quot;{{ route('notes.index') }}&quot;&gt;Todas as Notas&lt;/a&gt;&#10;&#10;        @auth&#10;            &lt;a href=&quot;{{ route('notes.create') }}&quot;&gt;Criar Nota&lt;/a&gt;&#10;            &lt;a href=&quot;{{ route('notes.index') }}?mine=true&quot;&gt;Minhas Notas&lt;/a&gt;&#10;        @endauth&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;auth-links&quot;&gt;&#10;        @guest&#10;            &lt;a href=&quot;{{ route('login') }}&quot; class=&quot;login&quot;&gt;Login&lt;/a&gt;&#10;            &lt;a href=&quot;{{ route('register') }}&quot; class=&quot;register&quot;&gt;Cadastrar&lt;/a&gt;&#10;        @else&#10;            &lt;span class=&quot;user-greeting&quot;&gt;Olá, {{ Auth::user()-&gt;name }}&lt;/span&gt;&#10;            &lt;form method=&quot;POST&quot; action=&quot;{{ route('logout') }}&quot; style=&quot;display:inline;&quot;&gt;&#10;                @csrf&#10;                &lt;button type=&quot;submit&quot; class=&quot;logout-btn&quot;&gt;Sair&lt;/button&gt;&#10;            &lt;/form&gt;&#10;        @endguest&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;@if(session('success'))&#10;    &lt;div class=&quot;alert alert-success&quot;&gt;&#10;        {{ session('success') }}&#10;    &lt;/div&gt;&#10;@endif&#10;&#10;@yield('content')&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;pt&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;Bloco de Notas&lt;/title&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/layouts/topbar.css') }}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/home.css') }}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/notes/create.css') }}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/notes/edit.css') }}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/notes/index.css') }}&quot;&gt;&#10;    &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ asset('css/auth/auth.css') }}&quot;&gt;&#10;    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;div class=&quot;topbar&quot;&gt;&#10;    &lt;div class=&quot;logo&quot;&gt; Web Notes&lt;/div&gt;&#10;&#10;    &lt;div class=&quot;main-menu&quot;&gt;&#10;        &lt;a href=&quot;{{ route('home') }}&quot;&gt;Início&lt;/a&gt;&#10;        &lt;a href=&quot;{{ route('notes.index') }}&quot;&gt;Todas as Notas&lt;/a&gt;&#10;&#10;        @auth&#10;            &lt;a href=&quot;{{ route('notes.create') }}&quot;&gt;Criar Nota&lt;/a&gt;&#10;            &lt;a href=&quot;{{ route('notes.index') }}?mine=true&quot;&gt;Minhas Notas&lt;/a&gt;&#10;        @endauth&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;auth-links&quot;&gt;&#10;        @guest&#10;            &lt;a href=&quot;{{ route('login') }}&quot; class=&quot;login&quot;&gt;Login&lt;/a&gt;&#10;            &lt;a href=&quot;{{ route('register') }}&quot; class=&quot;register&quot;&gt;Cadastrar&lt;/a&gt;&#10;        @else&#10;            &lt;a href=&quot;{{ route('profile.show') }}&quot; class=&quot;profile-link&quot;&gt;Meu Perfil&lt;/a&gt;&#10;            &lt;span class=&quot;user-greeting&quot;&gt;Olá, {{ Auth::user()-&gt;name }}&lt;/span&gt;&#10;            &lt;form method=&quot;POST&quot; action=&quot;{{ route('logout') }}&quot; style=&quot;display:inline;&quot;&gt;&#10;                @csrf&#10;                &lt;button type=&quot;submit&quot; class=&quot;logout-btn&quot;&gt;Sair&lt;/button&gt;&#10;            &lt;/form&gt;&#10;        @endguest&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;@if(session('success'))&#10;    &lt;div class=&quot;alert alert-success&quot;&gt;&#10;        {{ session('success') }}&#10;    &lt;/div&gt;&#10;@endif&#10;&#10;@yield('content')&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/resources/views/notes/create.blade.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/resources/views/notes/create.blade.php" />
              <option name="originalContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;create-container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;&#10;        &lt;h1&gt;Nova Nota&lt;/h1&gt;&#10;        &lt;a href=&quot;{{ route('notes.index') }}&quot; class=&quot;btn-back&quot;&gt;&#10;            &lt;span class=&quot;icon&quot;&gt;←&lt;/span&gt; Voltar&#10;        &lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;form-card&quot;&gt;&#10;        &lt;form action=&quot;{{ route('notes.store') }}&quot; method=&quot;POST&quot;&gt;&#10;            @csrf&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;title&quot;&gt;Título&lt;/label&gt;&#10;                &lt;input type=&quot;text&quot; id=&quot;title&quot; name=&quot;title&quot; required placeholder=&quot;Digite o título da sua nota&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;content&quot;&gt;Conteúdo&lt;/label&gt;&#10;                &lt;textarea id=&quot;content&quot; name=&quot;content&quot; required placeholder=&quot;Escreva o conteúdo da sua nota aqui...&quot;&gt;&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group visibility-toggle&quot;&gt;&#10;                &lt;label class=&quot;visibility-label&quot;&gt;&#10;                    &lt;input type=&quot;checkbox&quot; name=&quot;is_public&quot; id=&quot;is_public&quot; value=&quot;1&quot;&gt;&#10;                    &lt;span class=&quot;visibility-text&quot;&gt;Tornar esta nota pública&lt;/span&gt;&#10;                    &lt;span class=&quot;visibility-description&quot;&gt;Notas públicas podem ser vistas por todos os usuários&lt;/span&gt;&#10;                &lt;/label&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-actions&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn-save&quot;&gt;&#10;                    &lt;span class=&quot;icon&quot;&gt;✓&lt;/span&gt; Salvar Nota&#10;                &lt;/button&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;@endsection&#10;" />
              <option name="updatedContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;create-container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;&#10;        &lt;h1&gt;Nova Nota&lt;/h1&gt;&#10;        &lt;a href=&quot;{{ route('notes.index') }}&quot; class=&quot;btn-back&quot;&gt;&#10;            &lt;span class=&quot;icon&quot;&gt;←&lt;/span&gt; Voltar&#10;        &lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    @guest&#10;        &lt;div class=&quot;guest-info&quot;&gt;&#10;            &lt;div class=&quot;info-box&quot;&gt;&#10;                &lt;span class=&quot;info-icon&quot;&gt;ℹ️&lt;/span&gt;&#10;                &lt;div class=&quot;info-content&quot;&gt;&#10;                    &lt;strong&gt;Criando como visitante&lt;/strong&gt;&#10;                    &lt;p&gt;Você está criando uma nota pública. Para criar notas privadas, &lt;a href=&quot;{{ route('login') }}&quot;&gt;faça login&lt;/a&gt; ou &lt;a href=&quot;{{ route('register') }}&quot;&gt;cadastre-se&lt;/a&gt;.&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    @endguest&#10;&#10;    &lt;div class=&quot;form-card&quot;&gt;&#10;        &lt;form action=&quot;{{ route('notes.store') }}&quot; method=&quot;POST&quot;&gt;&#10;            @csrf&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;title&quot;&gt;Título&lt;/label&gt;&#10;                &lt;input type=&quot;text&quot; id=&quot;title&quot; name=&quot;title&quot; required placeholder=&quot;Digite o título da sua nota&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;content&quot;&gt;Conteúdo&lt;/label&gt;&#10;                &lt;textarea id=&quot;content&quot; name=&quot;content&quot; required placeholder=&quot;Escreva o conteúdo da sua nota aqui...&quot;&gt;&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            @auth&#10;                &lt;div class=&quot;form-group visibility-toggle&quot;&gt;&#10;                    &lt;label class=&quot;visibility-label&quot;&gt;&#10;                        &lt;input type=&quot;checkbox&quot; name=&quot;is_public&quot; id=&quot;is_public&quot; value=&quot;1&quot;&gt;&#10;                        &lt;span class=&quot;visibility-text&quot;&gt;Tornar esta nota pública&lt;/span&gt;&#10;                        &lt;span class=&quot;visibility-description&quot;&gt;Notas públicas podem ser vistas por todos os usuários&lt;/span&gt;&#10;                    &lt;/label&gt;&#10;                &lt;/div&gt;&#10;            @else&#10;                &lt;div class=&quot;form-group visibility-info&quot;&gt;&#10;                    &lt;div class=&quot;public-note-indicator&quot;&gt;&#10;                        &lt;span class=&quot;public-icon&quot;&gt;&lt;/span&gt;&#10;                        &lt;span class=&quot;public-text&quot;&gt;Esta nota será criada como pública&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;input type=&quot;hidden&quot; name=&quot;is_public&quot; value=&quot;1&quot;&gt;&#10;                &lt;/div&gt;&#10;            @endauth&#10;&#10;            &lt;div class=&quot;form-actions&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn-save&quot;&gt;&#10;                    &lt;span class=&quot;icon&quot;&gt;✓&lt;/span&gt; Salvar Nota&#10;                &lt;/button&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;.guest-info {&#10;    margin-bottom: 20px;&#10;}&#10;&#10;.info-box {&#10;    display: flex;&#10;    align-items: flex-start;&#10;    background-color: #e7f3ff;&#10;    border: 1px solid #b3d9ff;&#10;    border-radius: 8px;&#10;    padding: 15px;&#10;}&#10;&#10;.info-icon {&#10;    font-size: 20px;&#10;    margin-right: 12px;&#10;    margin-top: 2px;&#10;}&#10;&#10;.info-content {&#10;    flex: 1;&#10;}&#10;&#10;.info-content strong {&#10;    color: #0066cc;&#10;    display: block;&#10;    margin-bottom: 5px;&#10;}&#10;&#10;.info-content p {&#10;    margin: 0;&#10;    color: #333;&#10;    font-size: 14px;&#10;}&#10;&#10;.info-content a {&#10;    color: #e60000;&#10;    text-decoration: none;&#10;    font-weight: 500;&#10;}&#10;&#10;.info-content a:hover {&#10;    text-decoration: underline;&#10;}&#10;&#10;.visibility-info {&#10;    background-color: #f8f9fa;&#10;    border: 1px solid #dee2e6;&#10;    border-radius: 8px;&#10;    padding: 15px;&#10;}&#10;&#10;.public-note-indicator {&#10;    display: flex;&#10;    align-items: center;&#10;}&#10;&#10;.public-icon {&#10;    font-size: 18px;&#10;    margin-right: 10px;&#10;}&#10;&#10;.public-text {&#10;    color: #28a745;&#10;    font-weight: 500;&#10;}&#10;&#10;.visibility-toggle {&#10;    background-color: #f8f9fa;&#10;    border: 1px solid #dee2e6;&#10;    border-radius: 8px;&#10;    padding: 15px;&#10;}&#10;&#10;.visibility-label {&#10;    display: flex;&#10;    flex-direction: column;&#10;    cursor: pointer;&#10;}&#10;&#10;.visibility-text {&#10;    font-weight: 500;&#10;    margin-bottom: 5px;&#10;}&#10;&#10;.visibility-description {&#10;    font-size: 14px;&#10;    color: #666;&#10;}&#10;&lt;/style&gt;&#10;@endsection" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/resources/views/notes/edit.blade.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/resources/views/notes/edit.blade.php" />
              <option name="originalContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;edit-container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;&#10;        &lt;h1&gt;Editar Nota&lt;/h1&gt;&#10;        &lt;a href=&quot;{{ route('notes.index') }}&quot; class=&quot;btn-back&quot;&gt;&#10;            &lt;span class=&quot;icon&quot;&gt;←&lt;/span&gt; Voltar&#10;        &lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;form-card&quot;&gt;&#10;        &lt;form action=&quot;{{ route('notes.update', $note) }}&quot; method=&quot;POST&quot;&gt;&#10;            @csrf&#10;            @method('PUT')&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;title&quot;&gt;Título&lt;/label&gt;&#10;                &lt;input type=&quot;text&quot; id=&quot;title&quot; name=&quot;title&quot; value=&quot;{{ $note-&gt;title }}&quot; required placeholder=&quot;Digite o título da sua nota&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;content&quot;&gt;Conteúdo&lt;/label&gt;&#10;                &lt;textarea id=&quot;content&quot; name=&quot;content&quot; required placeholder=&quot;Escreva o conteúdo da sua nota aqui...&quot;&gt;{{ $note-&gt;content }}&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-actions&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn-update&quot;&gt;&#10;                    &lt;span class=&quot;icon&quot;&gt;✓&lt;/span&gt; Atualizar Nota&#10;                &lt;/button&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;@endsection&#10;" />
              <option name="updatedContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;edit-container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;&#10;        &lt;h1&gt;Editar Nota&lt;/h1&gt;&#10;        &lt;a href=&quot;{{ route('notes.index') }}&quot; class=&quot;btn-back&quot;&gt;&#10;            &lt;span class=&quot;icon&quot;&gt;←&lt;/span&gt; Voltar&#10;        &lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;form-card&quot;&gt;&#10;        &lt;form action=&quot;{{ route('notes.update', $note) }}&quot; method=&quot;POST&quot;&gt;&#10;            @csrf&#10;            @method('PUT')&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;title&quot;&gt;Título&lt;/label&gt;&#10;                &lt;input type=&quot;text&quot; id=&quot;title&quot; name=&quot;title&quot; value=&quot;{{ $note-&gt;title }}&quot; required placeholder=&quot;Digite o título da sua nota&quot;&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group&quot;&gt;&#10;                &lt;label for=&quot;content&quot;&gt;Conteúdo&lt;/label&gt;&#10;                &lt;textarea id=&quot;content&quot; name=&quot;content&quot; required placeholder=&quot;Escreva o conteúdo da sua nota aqui...&quot;&gt;{{ $note-&gt;content }}&lt;/textarea&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-group visibility-toggle&quot;&gt;&#10;                &lt;label class=&quot;visibility-label&quot;&gt;&#10;                    &lt;input type=&quot;checkbox&quot; name=&quot;is_public&quot; id=&quot;is_public&quot; value=&quot;1&quot; {{ $note-&gt;is_public ? 'checked' : '' }}&gt;&#10;                    &lt;span class=&quot;visibility-text&quot;&gt;Tornar esta nota pública&lt;/span&gt;&#10;                    &lt;span class=&quot;visibility-description&quot;&gt;Notas públicas podem ser vistas por todos os usuários&lt;/span&gt;&#10;                &lt;/label&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;form-actions&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;btn-update&quot;&gt;&#10;                    &lt;span class=&quot;icon&quot;&gt;✓&lt;/span&gt; Atualizar Nota&#10;                &lt;/button&gt;&#10;            &lt;/div&gt;&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;@endsection" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/resources/views/notes/index.blade.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/resources/views/notes/index.blade.php" />
              <option name="originalContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;notes-container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;&#10;        &lt;h1&gt;Notas&lt;/h1&gt;&#10;        &lt;a href=&quot;{{ route('notes.create') }}&quot; class=&quot;btn-create&quot;&gt;&#10;            &lt;span class=&quot;icon&quot;&gt;+&lt;/span&gt; Nova Nota&#10;        &lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;search-container&quot;&gt;&#10;        &lt;form action=&quot;{{ route('notes.index') }}&quot; method=&quot;GET&quot; class=&quot;search-form&quot;&gt;&#10;            &lt;div class=&quot;search-input-wrapper&quot;&gt;&#10;                &lt;input type=&quot;text&quot; name=&quot;search&quot; placeholder=&quot;Buscar notas...&quot; value=&quot;{{ request('search') }}&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;search-button&quot;&gt;&#10;                    &lt;span class=&quot;search-icon&quot;&gt;&lt;/span&gt;&#10;                &lt;/button&gt;&#10;            &lt;/div&gt;&#10;            @if(request('search'))&#10;                &lt;a href=&quot;{{ route('notes.index') }}&quot; class=&quot;clear-search&quot;&gt;Limpar busca&lt;/a&gt;&#10;            @endif&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;notes-list&quot;&gt;&#10;        @foreach($notes as $note)&#10;            &lt;div class=&quot;note-card {{ $note-&gt;is_public ? 'public-note' : 'private-note' }}&quot;&gt;&#10;                &lt;div class=&quot;note-content&quot;&gt;&#10;                    &lt;div class=&quot;note-header&quot;&gt;&#10;                        &lt;a href=&quot;{{ route('notes.show', $note) }}&quot; class=&quot;note-title&quot;&gt;{{ $note-&gt;title }}&lt;/a&gt;&#10;                        &lt;span class=&quot;visibility-badge {{ $note-&gt;is_public ? 'public' : 'private' }}&quot;&gt;&#10;                            {{ $note-&gt;is_public ? 'Pública' : 'Privada' }}&#10;                        &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    @if($note-&gt;user)&#10;                        &lt;div class=&quot;note-author&quot;&gt;&#10;                            Por: {{ $note-&gt;user-&gt;name }}&#10;                        &lt;/div&gt;&#10;                    @endif&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;note-actions&quot;&gt;&#10;                    @if(Auth::check() &amp;&amp; $note-&gt;user_id === Auth::id())&#10;                        &lt;a href=&quot;{{ route('notes.edit', $note) }}&quot; class=&quot;btn-edit&quot;&gt;Editar&lt;/a&gt;&#10;                        &lt;form action=&quot;{{ route('notes.destroy', $note) }}&quot; method=&quot;POST&quot;&gt;&#10;                            @csrf&#10;                            @method('DELETE')&#10;                            &lt;button type=&quot;submit&quot; class=&quot;btn-delete&quot;&gt;Excluir&lt;/button&gt;&#10;                        &lt;/form&gt;&#10;                    @endif&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        @endforeach&#10;&#10;        @if(count($notes) === 0)&#10;            &lt;div class=&quot;empty-state&quot;&gt;&#10;                &lt;div class=&quot;icon&quot;&gt;&lt;/div&gt;&#10;                &lt;p&gt;Nenhuma nota encontrada.&lt;/p&gt;&#10;                @auth&#10;                    &lt;p&gt;Crie sua primeira nota agora!&lt;/p&gt;&#10;                @else&#10;                    &lt;p&gt;Faça login para criar suas próprias notas!&lt;/p&gt;&#10;                @endauth&#10;            &lt;/div&gt;&#10;        @endif&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;@endsection&#10;&#10;&lt;style&gt;&#10;.notes-container {&#10;    max-width: 800px;&#10;    margin: 0 auto;&#10;    padding: 20px;&#10;}&#10;&#10;.header {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    margin-bottom: 20px;&#10;}&#10;&#10;h1 {&#10;    font-size: 28px;&#10;    margin: 0;&#10;}&#10;&#10;.btn-create {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    padding: 10px 15px;&#10;    background-color: #007bff;&#10;    color: white;&#10;    text-decoration: none;&#10;    border-radius: 5px;&#10;}&#10;&#10;.btn-create .icon {&#10;    margin-right: 5px;&#10;}&#10;&#10;.search-container {&#10;    margin-bottom: 20px;&#10;}&#10;&#10;.search-form {&#10;    display: flex;&#10;    align-items: center;&#10;}&#10;&#10;.search-input-wrapper {&#10;    flex: 1;&#10;    position: relative;&#10;}&#10;&#10;input[type=&quot;text&quot;] {&#10;    width: 100%;&#10;    padding: 10px 40px 10px 15px;&#10;    border: 1px solid #ccc;&#10;    border-radius: 5px;&#10;}&#10;&#10;.search-button {&#10;    position: absolute;&#10;    right: 5px;&#10;    top: 5px;&#10;    background: none;&#10;    border: none;&#10;    cursor: pointer;&#10;}&#10;&#10;.clear-search {&#10;    margin-left: 10px;&#10;    color: #007bff;&#10;    text-decoration: none;&#10;}&#10;&#10;.notes-list {&#10;    margin-top: 20px;&#10;}&#10;&#10;.note-card {&#10;    background-color: #f9f9f9;&#10;    border: 1px solid #ddd;&#10;    border-radius: 5px;&#10;    padding: 15px;&#10;    margin-bottom: 10px;&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;}&#10;&#10;.public-note {&#10;    border-left: 5px solid #28a745;&#10;}&#10;&#10;.private-note {&#10;    border-left: 5px solid #dc3545;&#10;}&#10;&#10;.note-content {&#10;    flex: 1;&#10;}&#10;&#10;.note-header {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;}&#10;&#10;.note-title {&#10;    font-size: 18px;&#10;    font-weight: bold;&#10;    color: #333;&#10;    text-decoration: none;&#10;}&#10;&#10;.visibility-badge {&#10;    padding: 5px 10px;&#10;    border-radius: 15px;&#10;    font-size: 12px;&#10;    font-weight: bold;&#10;    text-transform: uppercase;&#10;}&#10;&#10;.visibility-badge.public {&#10;    background-color: #28a745;&#10;    color: white;&#10;}&#10;&#10;.visibility-badge.private {&#10;    background-color: #dc3545;&#10;    color: white;&#10;}&#10;&#10;.note-author {&#10;    margin-top: 5px;&#10;    font-size: 14px;&#10;    color: #666;&#10;}&#10;&#10;.note-actions {&#10;    display: flex;&#10;    gap: 10px;&#10;}&#10;&#10;.btn-edit,&#10;.btn-delete {&#10;    padding: 8px 12px;&#10;    border: none;&#10;    border-radius: 5px;&#10;    cursor: pointer;&#10;}&#10;&#10;.btn-edit {&#10;    background-color: #007bff;&#10;    color: white;&#10;}&#10;&#10;.btn-delete {&#10;    background-color: #dc3545;&#10;    color: white;&#10;}&#10;&#10;.empty-state {&#10;    text-align: center;&#10;    padding: 50px 0;&#10;    color: #999;&#10;}&#10;&#10;.empty-state .icon {&#10;    font-size: 50px;&#10;    margin-bottom: 10px;&#10;}&#10;&lt;/style&gt;&#10;" />
              <option name="updatedContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;notes-container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;&#10;        &lt;h1&gt;{{ $viewTitle ?? 'Notas' }}&lt;/h1&gt;&#10;        &lt;a href=&quot;{{ route('notes.create') }}&quot; class=&quot;btn-create&quot;&gt;&#10;            &lt;span class=&quot;icon&quot;&gt;+&lt;/span&gt; Nova Nota&#10;        &lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;search-container&quot;&gt;&#10;        &lt;form action=&quot;{{ route('notes.index') }}&quot; method=&quot;GET&quot; class=&quot;search-form&quot;&gt;&#10;            &lt;div class=&quot;search-input-wrapper&quot;&gt;&#10;                &lt;input type=&quot;text&quot; name=&quot;search&quot; placeholder=&quot;Buscar notas...&quot; value=&quot;{{ request('search') }}&quot;&gt;&#10;                &lt;button type=&quot;submit&quot; class=&quot;search-button&quot;&gt;&#10;                    &lt;span class=&quot;search-icon&quot;&gt;&lt;/span&gt;&#10;                &lt;/button&gt;&#10;            &lt;/div&gt;&#10;            @if(request('search'))&#10;                &lt;a href=&quot;{{ route('notes.index') }}&quot; class=&quot;clear-search&quot;&gt;Limpar busca&lt;/a&gt;&#10;            @endif&#10;        &lt;/form&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;notes-list&quot;&gt;&#10;        @foreach($notes as $note)&#10;            &lt;div class=&quot;note-card {{ $note-&gt;is_public ? 'public-note' : 'private-note' }}&quot;&gt;&#10;                &lt;div class=&quot;note-content&quot;&gt;&#10;                    &lt;div class=&quot;note-header&quot;&gt;&#10;                        &lt;a href=&quot;{{ route('notes.show', $note) }}&quot; class=&quot;note-title&quot;&gt;{{ $note-&gt;title }}&lt;/a&gt;&#10;                        &lt;span class=&quot;visibility-badge {{ $note-&gt;is_public ? 'public' : 'private' }}&quot;&gt;&#10;                            {{ $note-&gt;is_public ? 'Pública' : 'Privada' }}&#10;                        &lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;note-author&quot;&gt;&#10;                        @if($note-&gt;isAnonymous())&#10;                            Por: &lt;span class=&quot;anonymous&quot;&gt;Usuário Anônimo&lt;/span&gt;&#10;                        @elseif($note-&gt;user)&#10;                            Por: {{ $note-&gt;user-&gt;name }}&#10;                        @else&#10;                            Por: &lt;span class=&quot;unknown&quot;&gt;Usuário não encontrado&lt;/span&gt;&#10;                        @endif&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;note-actions&quot;&gt;&#10;                    @if(Auth::check() &amp;&amp; $note-&gt;user_id === Auth::id())&#10;                        &lt;a href=&quot;{{ route('notes.edit', $note) }}&quot; class=&quot;btn-edit&quot;&gt;Editar&lt;/a&gt;&#10;                        &lt;form action=&quot;{{ route('notes.destroy', $note) }}&quot; method=&quot;POST&quot;&gt;&#10;                            @csrf&#10;                            @method('DELETE')&#10;                            &lt;button type=&quot;submit&quot; class=&quot;btn-delete&quot;&gt;Excluir&lt;/button&gt;&#10;                        &lt;/form&gt;&#10;                    @endif&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        @endforeach&#10;&#10;        @if(count($notes) === 0)&#10;            &lt;div class=&quot;empty-state&quot;&gt;&#10;                &lt;div class=&quot;icon&quot;&gt;&lt;/div&gt;&#10;                &lt;p&gt;Nenhuma nota encontrada.&lt;/p&gt;&#10;                @auth&#10;                    &lt;p&gt;Crie sua primeira nota agora!&lt;/p&gt;&#10;                @else&#10;                    &lt;p&gt;Crie uma nota pública ou faça login para acessar notas privadas!&lt;/p&gt;&#10;                @endauth&#10;            &lt;/div&gt;&#10;        @endif&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;.notes-container {&#10;    max-width: 800px;&#10;    margin: 0 auto;&#10;    padding: 20px;&#10;}&#10;&#10;.header {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    margin-bottom: 20px;&#10;}&#10;&#10;h1 {&#10;    font-size: 28px;&#10;    margin: 0;&#10;}&#10;&#10;.btn-create {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    padding: 10px 15px;&#10;    background-color: #007bff;&#10;    color: white;&#10;    text-decoration: none;&#10;    border-radius: 5px;&#10;}&#10;&#10;.btn-create .icon {&#10;    margin-right: 5px;&#10;}&#10;&#10;.search-container {&#10;    margin-bottom: 20px;&#10;}&#10;&#10;.search-form {&#10;    display: flex;&#10;    align-items: center;&#10;}&#10;&#10;.search-input-wrapper {&#10;    flex: 1;&#10;    position: relative;&#10;}&#10;&#10;input[type=&quot;text&quot;] {&#10;    width: 100%;&#10;    padding: 10px 40px 10px 15px;&#10;    border: 1px solid #ccc;&#10;    border-radius: 5px;&#10;}&#10;&#10;.search-button {&#10;    position: absolute;&#10;    right: 5px;&#10;    top: 5px;&#10;    background: none;&#10;    border: none;&#10;    cursor: pointer;&#10;}&#10;&#10;.clear-search {&#10;    margin-left: 10px;&#10;    color: #007bff;&#10;    text-decoration: none;&#10;}&#10;&#10;.notes-list {&#10;    margin-top: 20px;&#10;}&#10;&#10;.note-card {&#10;    background-color: #f9f9f9;&#10;    border: 1px solid #ddd;&#10;    border-radius: 5px;&#10;    padding: 15px;&#10;    margin-bottom: 10px;&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;}&#10;&#10;.public-note {&#10;    border-left: 5px solid #28a745;&#10;}&#10;&#10;.private-note {&#10;    border-left: 5px solid #dc3545;&#10;}&#10;&#10;.note-content {&#10;    flex: 1;&#10;}&#10;&#10;.note-header {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;}&#10;&#10;.note-title {&#10;    font-size: 18px;&#10;    font-weight: bold;&#10;    color: #333;&#10;    text-decoration: none;&#10;}&#10;&#10;.visibility-badge {&#10;    padding: 5px 10px;&#10;    border-radius: 15px;&#10;    font-size: 12px;&#10;    font-weight: bold;&#10;    text-transform: uppercase;&#10;}&#10;&#10;.visibility-badge.public {&#10;    background-color: #28a745;&#10;    color: white;&#10;}&#10;&#10;.visibility-badge.private {&#10;    background-color: #dc3545;&#10;    color: white;&#10;}&#10;&#10;.note-author {&#10;    margin-top: 5px;&#10;    font-size: 14px;&#10;    color: #666;&#10;}&#10;&#10;.note-author .anonymous {&#10;    color: #6c757d;&#10;    font-style: italic;&#10;}&#10;&#10;.note-author .unknown {&#10;    color: #dc3545;&#10;    font-style: italic;&#10;}&#10;&#10;.note-actions {&#10;    display: flex;&#10;    gap: 10px;&#10;}&#10;&#10;.btn-edit,&#10;.btn-delete {&#10;    padding: 8px 12px;&#10;    border: none;&#10;    border-radius: 5px;&#10;    cursor: pointer;&#10;}&#10;&#10;.btn-edit {&#10;    background-color: #007bff;&#10;    color: white;&#10;}&#10;&#10;.btn-delete {&#10;    background-color: #dc3545;&#10;    color: white;&#10;}&#10;&#10;.empty-state {&#10;    text-align: center;&#10;    padding: 50px 0;&#10;    color: #999;&#10;}&#10;&#10;.empty-state .icon {&#10;    font-size: 50px;&#10;    margin-bottom: 10px;&#10;}&#10;&lt;/style&gt;&#10;@endsection" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/resources/views/notes/show.blade.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/resources/views/notes/show.blade.php" />
              <option name="originalContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;    &lt;h1&gt;Editar Nota&lt;/h1&gt;&#10;    &lt;form action=&quot;{{ route('notes.update', $note) }}&quot; method=&quot;POST&quot;&gt;&#10;        @csrf&#10;        @method('PUT')&#10;        &lt;label&gt;Título:&lt;/label&gt;&#10;        &lt;input type=&quot;text&quot; name=&quot;title&quot; value=&quot;{{ $note-&gt;title }}&quot; required&gt;&#10;        &lt;br&gt;&#10;        &lt;label&gt;Conteúdo:&lt;/label&gt;&#10;        &lt;textarea name=&quot;content&quot; required&gt;{{ $note-&gt;content }}&lt;/textarea&gt;&#10;        &lt;br&gt;&#10;        &lt;button type=&quot;submit&quot;&gt;Atualizar&lt;/button&gt;&#10;    &lt;/form&gt;&#10;    &lt;a href=&quot;{{ route('notes.index') }}&quot;&gt;Voltar&lt;/a&gt;&#10;@endsection&#10;" />
              <option name="updatedContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;show-container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;&#10;        &lt;h1&gt;{{ $note-&gt;title }}&lt;/h1&gt;&#10;        &lt;div class=&quot;header-buttons&quot;&gt;&#10;            &lt;a href=&quot;{{ route('notes.index') }}&quot; class=&quot;btn-back&quot;&gt;&#10;                &lt;span class=&quot;icon&quot;&gt;←&lt;/span&gt; Voltar&#10;            &lt;/a&gt;&#10;            @if(Auth::check() &amp;&amp; $note-&gt;user_id === Auth::id())&#10;                &lt;a href=&quot;{{ route('notes.edit', $note) }}&quot; class=&quot;btn-edit&quot;&gt;Editar&lt;/a&gt;&#10;            @endif&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;note-details&quot;&gt;&#10;        &lt;div class=&quot;note-meta&quot;&gt;&#10;            &lt;span class=&quot;visibility-badge {{ $note-&gt;is_public ? 'public' : 'private' }}&quot;&gt;&#10;                {{ $note-&gt;is_public ? 'Nota Pública' : 'Nota Privada' }}&#10;            &lt;/span&gt;&#10;            @if($note-&gt;user)&#10;                &lt;span class=&quot;note-author&quot;&gt;Por: {{ $note-&gt;user-&gt;name }}&lt;/span&gt;&#10;            @endif&#10;            &lt;span class=&quot;note-date&quot;&gt;Criada em: {{ $note-&gt;created_at-&gt;format('d/m/Y H:i') }}&lt;/span&gt;&#10;            @if($note-&gt;updated_at != $note-&gt;created_at)&#10;                &lt;span class=&quot;note-date&quot;&gt;Atualizada em: {{ $note-&gt;updated_at-&gt;format('d/m/Y H:i') }}&lt;/span&gt;&#10;            @endif&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;note-content&quot;&gt;&#10;            {!! nl2br(e($note-&gt;content)) !!}&#10;        &lt;/div&gt;&#10;&#10;        @if(Auth::check() &amp;&amp; $note-&gt;user_id === Auth::id())&#10;            &lt;div class=&quot;note-actions&quot;&gt;&#10;                &lt;form action=&quot;{{ route('notes.destroy', $note) }}&quot; method=&quot;POST&quot;&gt;&#10;                    @csrf&#10;                    @method('DELETE')&#10;                    &lt;button type=&quot;submit&quot; class=&quot;btn-delete&quot;&gt;Excluir Nota&lt;/button&gt;&#10;                &lt;/form&gt;&#10;            &lt;/div&gt;&#10;        @endif&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;.show-container {&#10;    max-width: 800px;&#10;    margin: 30px auto;&#10;    padding: 20px;&#10;}&#10;&#10;.header {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    margin-bottom: 20px;&#10;    border-bottom: 1px solid #eee;&#10;    padding-bottom: 15px;&#10;}&#10;&#10;.header h1 {&#10;    margin: 0;&#10;    color: #333;&#10;    font-size: 28px;&#10;}&#10;&#10;.header-buttons {&#10;    display: flex;&#10;    gap: 10px;&#10;}&#10;&#10;.btn-back, .btn-edit {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    padding: 8px 15px;&#10;    text-decoration: none;&#10;    border-radius: 4px;&#10;}&#10;&#10;.btn-back {&#10;    background-color: #f0f0f0;&#10;    color: #333;&#10;}&#10;&#10;.btn-edit {&#10;    background-color: #007bff;&#10;    color: white;&#10;}&#10;&#10;.note-details {&#10;    background-color: #fff;&#10;    border-radius: 8px;&#10;    box-shadow: 0 2px 8px rgba(0,0,0,0.1);&#10;    padding: 25px;&#10;}&#10;&#10;.note-meta {&#10;    margin-bottom: 20px;&#10;    display: flex;&#10;    flex-wrap: wrap;&#10;    gap: 15px;&#10;    align-items: center;&#10;    font-size: 14px;&#10;    color: #666;&#10;}&#10;&#10;.visibility-badge {&#10;    padding: 5px 12px;&#10;    border-radius: 15px;&#10;    font-size: 12px;&#10;    font-weight: bold;&#10;}&#10;&#10;.visibility-badge.public {&#10;    background-color: #28a745;&#10;    color: white;&#10;}&#10;&#10;.visibility-badge.private {&#10;    background-color: #dc3545;&#10;    color: white;&#10;}&#10;&#10;.note-author {&#10;    font-weight: 500;&#10;}&#10;&#10;.note-content {&#10;    font-size: 16px;&#10;    line-height: 1.6;&#10;    color: #333;&#10;    white-space: pre-wrap;&#10;    margin-bottom: 30px;&#10;}&#10;&#10;.note-actions {&#10;    margin-top: 30px;&#10;    padding-top: 20px;&#10;    border-top: 1px solid #eee;&#10;    text-align: right;&#10;}&#10;&#10;.btn-delete {&#10;    background-color: #dc3545;&#10;    color: white;&#10;    border: none;&#10;    padding: 8px 15px;&#10;    border-radius: 4px;&#10;    cursor: pointer;&#10;    transition: background-color 0.2s;&#10;}&#10;&#10;.btn-delete:hover {&#10;    background-color: #c82333;&#10;}&#10;&lt;/style&gt;&#10;@endsection" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/resources/views/profile/edit.blade.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/resources/views/profile/edit.blade.php" />
              <option name="updatedContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;profile-edit-container&quot;&gt;&#10;    &lt;div class=&quot;header&quot;&gt;&#10;        &lt;h1&gt;Editar Perfil&lt;/h1&gt;&#10;        &lt;a href=&quot;{{ route('profile.show') }}&quot; class=&quot;btn-back&quot;&gt;&#10;            &lt;span class=&quot;icon&quot;&gt;←&lt;/span&gt; Voltar ao Perfil&#10;        &lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;edit-forms&quot;&gt;&#10;        &lt;!-- Formulário de Informações Pessoais --&gt;&#10;        &lt;div class=&quot;form-section&quot;&gt;&#10;            &lt;h2&gt;Informações Pessoais&lt;/h2&gt;&#10;            &lt;form action=&quot;{{ route('profile.update') }}&quot; method=&quot;POST&quot; class=&quot;profile-form&quot;&gt;&#10;                @csrf&#10;                @method('PUT')&#10;                &#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;name&quot;&gt;Nome&lt;/label&gt;&#10;                    &lt;input type=&quot;text&quot; id=&quot;name&quot; name=&quot;name&quot; value=&quot;{{ old('name', $user-&gt;name) }}&quot; required&gt;&#10;                    @error('name')&#10;                        &lt;span class=&quot;error-message&quot;&gt;{{ $message }}&lt;/span&gt;&#10;                    @enderror&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;email&quot;&gt;E-mail&lt;/label&gt;&#10;                    &lt;input type=&quot;email&quot; id=&quot;email&quot; name=&quot;email&quot; value=&quot;{{ old('email', $user-&gt;email) }}&quot; required&gt;&#10;                    @error('email')&#10;                        &lt;span class=&quot;error-message&quot;&gt;{{ $message }}&lt;/span&gt;&#10;                    @enderror&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;form-actions&quot;&gt;&#10;                    &lt;button type=&quot;submit&quot; class=&quot;btn-save&quot;&gt;&#10;                        &lt;span class=&quot;icon&quot;&gt;✓&lt;/span&gt; Salvar Alterações&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/form&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Formulário de Alteração de Senha --&gt;&#10;        &lt;div class=&quot;form-section&quot;&gt;&#10;            &lt;h2&gt;Alterar Senha&lt;/h2&gt;&#10;            &lt;form action=&quot;{{ route('profile.updatePassword') }}&quot; method=&quot;POST&quot; class=&quot;password-form&quot;&gt;&#10;                @csrf&#10;                @method('PUT')&#10;                &#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;current_password&quot;&gt;Senha Atual&lt;/label&gt;&#10;                    &lt;input type=&quot;password&quot; id=&quot;current_password&quot; name=&quot;current_password&quot; required&gt;&#10;                    @error('current_password')&#10;                        &lt;span class=&quot;error-message&quot;&gt;{{ $message }}&lt;/span&gt;&#10;                    @enderror&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;password&quot;&gt;Nova Senha&lt;/label&gt;&#10;                    &lt;input type=&quot;password&quot; id=&quot;password&quot; name=&quot;password&quot; required&gt;&#10;                    @error('password')&#10;                        &lt;span class=&quot;error-message&quot;&gt;{{ $message }}&lt;/span&gt;&#10;                    @enderror&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;form-group&quot;&gt;&#10;                    &lt;label for=&quot;password_confirmation&quot;&gt;Confirmar Nova Senha&lt;/label&gt;&#10;                    &lt;input type=&quot;password&quot; id=&quot;password_confirmation&quot; name=&quot;password_confirmation&quot; required&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;form-actions&quot;&gt;&#10;                    &lt;button type=&quot;submit&quot; class=&quot;btn-save-password&quot;&gt;&#10;                        &lt;span class=&quot;icon&quot;&gt;&lt;/span&gt; Alterar Senha&#10;                    &lt;/button&gt;&#10;                &lt;/div&gt;&#10;            &lt;/form&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;.profile-edit-container {&#10;    max-width: 900px;&#10;    margin: 30px auto;&#10;    padding: 20px;&#10;}&#10;&#10;.header {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    margin-bottom: 30px;&#10;    border-bottom: 3px solid #e60000;&#10;    padding-bottom: 15px;&#10;}&#10;&#10;.header h1 {&#10;    margin: 0;&#10;    color: #333;&#10;    font-size: 28px;&#10;}&#10;&#10;.btn-back {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    padding: 10px 15px;&#10;    background-color: #f0f0f0;&#10;    color: #333;&#10;    text-decoration: none;&#10;    border-radius: 6px;&#10;    font-weight: 500;&#10;    transition: background-color 0.3s;&#10;}&#10;&#10;.btn-back:hover {&#10;    background-color: #e0e0e0;&#10;}&#10;&#10;.btn-back .icon {&#10;    margin-right: 8px;&#10;}&#10;&#10;.edit-forms {&#10;    display: grid;&#10;    grid-template-columns: 1fr 1fr;&#10;    gap: 30px;&#10;}&#10;&#10;.form-section {&#10;    background-color: #fff;&#10;    border-radius: 10px;&#10;    box-shadow: 0 4px 15px rgba(0,0,0,0.1);&#10;    padding: 25px;&#10;    border-top: 4px solid #e60000;&#10;}&#10;&#10;.form-section h2 {&#10;    margin: 0 0 20px 0;&#10;    color: #333;&#10;    font-size: 20px;&#10;    font-weight: 600;&#10;}&#10;&#10;.form-group {&#10;    margin-bottom: 20px;&#10;}&#10;&#10;.form-group label {&#10;    display: block;&#10;    margin-bottom: 8px;&#10;    font-weight: 500;&#10;    color: #555;&#10;}&#10;&#10;.form-group input {&#10;    width: 100%;&#10;    padding: 12px;&#10;    border: 1px solid #ddd;&#10;    border-radius: 6px;&#10;    font-size: 16px;&#10;    transition: border-color 0.3s, box-shadow 0.3s;&#10;    box-sizing: border-box;&#10;}&#10;&#10;.form-group input:focus {&#10;    border-color: #e60000;&#10;    outline: none;&#10;    box-shadow: 0 0 0 3px rgba(230, 0, 0, 0.1);&#10;}&#10;&#10;.error-message {&#10;    color: #e60000;&#10;    font-size: 14px;&#10;    margin-top: 5px;&#10;    display: block;&#10;}&#10;&#10;.form-actions {&#10;    margin-top: 25px;&#10;}&#10;&#10;.btn-save,&#10;.btn-save-password {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    padding: 12px 20px;&#10;    border: none;&#10;    border-radius: 6px;&#10;    font-size: 16px;&#10;    font-weight: 500;&#10;    cursor: pointer;&#10;    transition: background-color 0.3s, transform 0.2s;&#10;    width: 100%;&#10;    justify-content: center;&#10;}&#10;&#10;.btn-save {&#10;    background-color: #e60000;&#10;    color: white;&#10;}&#10;&#10;.btn-save:hover {&#10;    background-color: #cc0000;&#10;    transform: translateY(-2px);&#10;}&#10;&#10;.btn-save-password {&#10;    background-color: #28a745;&#10;    color: white;&#10;}&#10;&#10;.btn-save-password:hover {&#10;    background-color: #218838;&#10;    transform: translateY(-2px);&#10;}&#10;&#10;.btn-save .icon,&#10;.btn-save-password .icon {&#10;    margin-right: 8px;&#10;}&#10;&#10;@media (max-width: 768px) {&#10;    .edit-forms {&#10;        grid-template-columns: 1fr;&#10;        gap: 20px;&#10;    }&#10;    &#10;    .profile-edit-container {&#10;        padding: 15px;&#10;    }&#10;    &#10;    .header {&#10;        flex-direction: column;&#10;        gap: 15px;&#10;        text-align: center;&#10;    }&#10;}&#10;&lt;/style&gt;&#10;@endsection" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/resources/views/profile/show.blade.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/resources/views/profile/show.blade.php" />
              <option name="updatedContent" value="@extends('layouts.app')&#10;&#10;@section('content')&#10;&lt;div class=&quot;profile-container&quot;&gt;&#10;    &lt;div class=&quot;profile-header&quot;&gt;&#10;        &lt;h1&gt;Meu Perfil&lt;/h1&gt;&#10;        &lt;a href=&quot;{{ route('profile.edit') }}&quot; class=&quot;btn-edit-profile&quot;&gt;&#10;            &lt;span class=&quot;icon&quot;&gt;✏️&lt;/span&gt; Editar Perfil&#10;        &lt;/a&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;div class=&quot;profile-card&quot;&gt;&#10;        &lt;div class=&quot;profile-info&quot;&gt;&#10;            &lt;div class=&quot;profile-avatar&quot;&gt;&#10;                &lt;span class=&quot;avatar-initial&quot;&gt;{{ strtoupper(substr($user-&gt;name, 0, 1)) }}&lt;/span&gt;&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;profile-details&quot;&gt;&#10;                &lt;div class=&quot;detail-item&quot;&gt;&#10;                    &lt;label&gt;Nome:&lt;/label&gt;&#10;                    &lt;span class=&quot;detail-value&quot;&gt;{{ $user-&gt;name }}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;detail-item&quot;&gt;&#10;                    &lt;label&gt;E-mail:&lt;/label&gt;&#10;                    &lt;span class=&quot;detail-value&quot;&gt;{{ $user-&gt;email }}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &#10;                &lt;div class=&quot;detail-item&quot;&gt;&#10;                    &lt;label&gt;Membro desde:&lt;/label&gt;&#10;                    &lt;span class=&quot;detail-value&quot;&gt;{{ $user-&gt;created_at-&gt;format('d/m/Y') }}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &#10;        &lt;div class=&quot;profile-stats&quot;&gt;&#10;            &lt;div class=&quot;stat-item&quot;&gt;&#10;                &lt;span class=&quot;stat-number&quot;&gt;{{ $user-&gt;notes()-&gt;count() }}&lt;/span&gt;&#10;                &lt;span class=&quot;stat-label&quot;&gt;Total de Notas&lt;/span&gt;&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;stat-item&quot;&gt;&#10;                &lt;span class=&quot;stat-number&quot;&gt;{{ $user-&gt;notes()-&gt;where('is_public', true)-&gt;count() }}&lt;/span&gt;&#10;                &lt;span class=&quot;stat-label&quot;&gt;Notas Públicas&lt;/span&gt;&#10;            &lt;/div&gt;&#10;            &#10;            &lt;div class=&quot;stat-item&quot;&gt;&#10;                &lt;span class=&quot;stat-number&quot;&gt;{{ $user-&gt;notes()-&gt;where('is_public', false)-&gt;count() }}&lt;/span&gt;&#10;                &lt;span class=&quot;stat-label&quot;&gt;Notas Privadas&lt;/span&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;style&gt;&#10;.profile-container {&#10;    max-width: 800px;&#10;    margin: 30px auto;&#10;    padding: 20px;&#10;}&#10;&#10;.profile-header {&#10;    display: flex;&#10;    justify-content: space-between;&#10;    align-items: center;&#10;    margin-bottom: 30px;&#10;    border-bottom: 3px solid #e60000;&#10;    padding-bottom: 15px;&#10;}&#10;&#10;.profile-header h1 {&#10;    margin: 0;&#10;    color: #333;&#10;    font-size: 28px;&#10;}&#10;&#10;.btn-edit-profile {&#10;    display: inline-flex;&#10;    align-items: center;&#10;    padding: 10px 20px;&#10;    background-color: #e60000;&#10;    color: white;&#10;    text-decoration: none;&#10;    border-radius: 6px;&#10;    font-weight: 500;&#10;    transition: background-color 0.3s;&#10;}&#10;&#10;.btn-edit-profile:hover {&#10;    background-color: #cc0000;&#10;}&#10;&#10;.btn-edit-profile .icon {&#10;    margin-right: 8px;&#10;}&#10;&#10;.profile-card {&#10;    background-color: #fff;&#10;    border-radius: 10px;&#10;    box-shadow: 0 4px 15px rgba(0,0,0,0.1);&#10;    padding: 30px;&#10;}&#10;&#10;.profile-info {&#10;    display: flex;&#10;    align-items: center;&#10;    margin-bottom: 30px;&#10;}&#10;&#10;.profile-avatar {&#10;    width: 80px;&#10;    height: 80px;&#10;    background: linear-gradient(135deg, #e60000, #ff3333);&#10;    border-radius: 50%;&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    margin-right: 30px;&#10;}&#10;&#10;.avatar-initial {&#10;    color: white;&#10;    font-size: 32px;&#10;    font-weight: bold;&#10;}&#10;&#10;.profile-details {&#10;    flex: 1;&#10;}&#10;&#10;.detail-item {&#10;    margin-bottom: 15px;&#10;    display: flex;&#10;    align-items: center;&#10;}&#10;&#10;.detail-item label {&#10;    font-weight: 600;&#10;    color: #555;&#10;    width: 120px;&#10;    margin-right: 15px;&#10;}&#10;&#10;.detail-value {&#10;    color: #333;&#10;    font-size: 16px;&#10;}&#10;&#10;.profile-stats {&#10;    display: flex;&#10;    justify-content: space-around;&#10;    background-color: #f8f9fa;&#10;    border-radius: 8px;&#10;    padding: 20px;&#10;    border-top: 3px solid #e60000;&#10;}&#10;&#10;.stat-item {&#10;    text-align: center;&#10;}&#10;&#10;.stat-number {&#10;    display: block;&#10;    font-size: 24px;&#10;    font-weight: bold;&#10;    color: #e60000;&#10;    margin-bottom: 5px;&#10;}&#10;&#10;.stat-label {&#10;    color: #666;&#10;    font-size: 14px;&#10;    font-weight: 500;&#10;}&#10;&#10;@media (max-width: 768px) {&#10;    .profile-info {&#10;        flex-direction: column;&#10;        text-align: center;&#10;    }&#10;    &#10;    .profile-avatar {&#10;        margin-right: 0;&#10;        margin-bottom: 20px;&#10;    }&#10;    &#10;    .detail-item {&#10;        flex-direction: column;&#10;        text-align: center;&#10;    }&#10;    &#10;    .detail-item label {&#10;        width: auto;&#10;        margin-right: 0;&#10;        margin-bottom: 5px;&#10;    }&#10;    &#10;    .profile-stats {&#10;        flex-direction: column;&#10;        gap: 15px;&#10;    }&#10;}&#10;&lt;/style&gt;&#10;@endsection" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/NotesWeb/routes/web.php">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/NotesWeb/routes/web.php" />
              <option name="originalContent" value="&lt;?php&#10;&#10;use Illuminate\Support\Facades\Route;&#10;use App\Http\Controllers\NoteController;&#10;use App\Http\Controllers\HomeController;&#10;use App\Http\Controllers\AuthController;&#10;&#10;Route::get('/', [HomeController::class, 'index'])-&gt;name('home');&#10;&#10;// Rotas públicas de autenticação&#10;Route::get('/login', [AuthController::class, 'showLogin'])-&gt;name('login')-&gt;middleware('guest');&#10;Route::post('/login', [AuthController::class, 'login'])-&gt;middleware('guest');&#10;Route::get('/register', [AuthController::class, 'showRegister'])-&gt;name('register')-&gt;middleware('guest');&#10;Route::post('/register', [AuthController::class, 'register'])-&gt;middleware('guest');&#10;&#10;// Rotas públicas para notas (visualização e criação)&#10;Route::get('/notes', [NoteController::class, 'index'])-&gt;name('notes.index');&#10;Route::get('/notes/create', [NoteController::class, 'create'])-&gt;name('notes.create');&#10;Route::post('/notes', [NoteController::class, 'store'])-&gt;name('notes.store');&#10;Route::get('/notes/{note}', [NoteController::class, 'show'])-&gt;name('notes.show');&#10;&#10;// Rotas protegidas (edição e exclusão)&#10;Route::middleware('auth')-&gt;group(function () {&#10;    Route::get('/notes/{note}/edit', [NoteController::class, 'edit'])-&gt;name('notes.edit');&#10;    Route::put('/notes/{note}', [NoteController::class, 'update'])-&gt;name('notes.update');&#10;    Route::delete('/notes/{note}', [NoteController::class, 'destroy'])-&gt;name('notes.destroy');&#10;    Route::post('/logout', [AuthController::class, 'logout'])-&gt;name('logout');&#10;});&#10;" />
              <option name="updatedContent" value="&lt;?php&#10;&#10;use Illuminate\Support\Facades\Route;&#10;use App\Http\Controllers\NoteController;&#10;use App\Http\Controllers\HomeController;&#10;use App\Http\Controllers\AuthController;&#10;use App\Http\Controllers\ProfileController;&#10;&#10;Route::get('/', [HomeController::class, 'index'])-&gt;name('home');&#10;&#10;// Rotas públicas de autenticação&#10;Route::get('/login', [AuthController::class, 'showLogin'])-&gt;name('login')-&gt;middleware('guest');&#10;Route::post('/login', [AuthController::class, 'login'])-&gt;middleware('guest');&#10;Route::get('/register', [AuthController::class, 'showRegister'])-&gt;name('register')-&gt;middleware('guest');&#10;Route::post('/register', [AuthController::class, 'register'])-&gt;middleware('guest');&#10;&#10;// Rotas públicas para notas (visualização e criação)&#10;Route::get('/notes', [NoteController::class, 'index'])-&gt;name('notes.index');&#10;Route::get('/notes/create', [NoteController::class, 'create'])-&gt;name('notes.create');&#10;Route::post('/notes', [NoteController::class, 'store'])-&gt;name('notes.store');&#10;Route::get('/notes/{note}', [NoteController::class, 'show'])-&gt;name('notes.show');&#10;&#10;// Rotas protegidas (edição e exclusão de notas, perfil do usuário)&#10;Route::middleware('auth')-&gt;group(function () {&#10;    Route::get('/notes/{note}/edit', [NoteController::class, 'edit'])-&gt;name('notes.edit');&#10;    Route::put('/notes/{note}', [NoteController::class, 'update'])-&gt;name('notes.update');&#10;    Route::delete('/notes/{note}', [NoteController::class, 'destroy'])-&gt;name('notes.destroy');&#10;    &#10;    // Rotas de perfil&#10;    Route::get('/profile', [ProfileController::class, 'show'])-&gt;name('profile.show');&#10;    Route::get('/profile/edit', [ProfileController::class, 'edit'])-&gt;name('profile.edit');&#10;    Route::put('/profile', [ProfileController::class, 'update'])-&gt;name('profile.update');&#10;    Route::put('/profile/password', [ProfileController::class, 'updatePassword'])-&gt;name('profile.updatePassword');&#10;    &#10;    Route::post('/logout', [AuthController::class, 'logout'])-&gt;name('logout');&#10;});" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>